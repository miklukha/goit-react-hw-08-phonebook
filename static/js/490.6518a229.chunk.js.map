{"version":3,"file":"static/js/490.6518a229.chunk.js","mappings":"gUAaMA,GAAQC,EAAAA,EAAAA,KAEP,SAASC,IACd,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACE,SAAC,IAAD,CAAeJ,MAAOA,EAAtB,UACE,UAAC,IAAD,CAAWK,UAAU,OAAOC,SAAS,KAArC,WACE,SAAC,KAAD,KACA,UAAC,IAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAAC,IAAD,CAAYN,UAAU,KAAKO,QAAQ,KAAnC,sBAGA,UAAC,IAAD,CACEP,UAAU,OACVQ,SA5BW,SAAAC,GACnBA,EAAEC,iBAEF,IAAMC,EAAW,IAAIC,SAASH,EAAEI,eAC1BC,EAAO,CACXC,MAAOJ,EAASK,IAAI,SACpBC,SAAUN,EAASK,IAAI,aAEzBlB,EAASoB,EAAAA,GAAAA,MAAqBJ,KAqBtBK,YAAU,EACVjB,GAAI,CAAEkB,GAAI,GAJZ,WAME,SAAC,IAAD,CACEC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,KAEX,SAAC,IAAD,CACEP,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTG,KAAK,WACLD,MAAM,WACNI,KAAK,WACLL,GAAG,WACHG,aAAa,sBAEf,SAAC,IAAD,CACEE,KAAK,SACLN,WAAS,EACThB,QAAQ,YACRL,GAAI,CAAEkB,GAAI,EAAGU,GAAI,GAJnB,sBAQA,SAAC,KAAD,CAAMC,WAAS,EAACC,eAAe,WAA/B,UACE,SAAC,KAAD,CAAMC,MAAI,EAAV,UACE,SAAC,IAAD,CAAMjC,UAAWkC,EAAAA,GAAYC,GAAG,YAAY5B,QAAQ,QAApD,SACG","sources":["pages/Login.js"],"sourcesContent":["import Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Container from '@mui/material/Container';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport Link from '@mui/material/Link';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport TextField from '@mui/material/TextField';\nimport Typography from '@mui/material/Typography';\nimport { useDispatch } from 'react-redux';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { authOperations } from 'redux/auth';\n\nconst theme = createTheme();\n\nexport function Login() {\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const formData = new FormData(e.currentTarget);\n    const data = {\n      email: formData.get('email'),\n      password: formData.get('password'),\n    };\n    dispatch(authOperations.logIn(data));\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n          <Box\n            component=\"form\"\n            onSubmit={handleSubmit}\n            noValidate\n            sx={{ mt: 1 }}\n          >\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"email\"\n              label=\"Email Address\"\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Link component={RouterLink} to=\"/register\" variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n"],"names":["theme","createTheme","Login","dispatch","useDispatch","component","maxWidth","sx","marginTop","display","flexDirection","alignItems","variant","onSubmit","e","preventDefault","formData","FormData","currentTarget","data","email","get","password","authOperations","noValidate","mt","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","mb","container","justifyContent","item","RouterLink","to"],"sourceRoot":""}